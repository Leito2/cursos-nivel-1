/*mobile first*/
/*COMO UTILIZAR EL media query screen con responsive design*/

/*flex*/
.container {
  background-color: gray;
  display: flex;
  flex-direction: column;
  height: 100vh;
}
header, main, aside, footer {
  padding: 20px;
}

header {
  flex: 1 0 60px;
  background-color: lightblue;
}
main {
  flex: 3 1 300px;
  background-color: slateblue;
}
aside {
  flex: 1 3 200px;
  background-color: darkslateblue;
}
footer {
  flex: 1 0 60px;
  background-color: violet;
}

/*media puede utilizar otros condicionales como or, además de que screen es un metodo (e más usado) de los media query. también se puede colocar varios condicionales como que este entre un intervalo el screen*/
@media screen and (min-width: 700px) {
  .container {
    flex-flow: row wrap;
  }
  header {
    flex: 1 0 100%;
    max-height: 60px;
  }
  main, aside {
    min-height: 81%;
  }
  footer {
    flex: 1 0 100%;
    max-height: 60px;
  }
}



/*con grid*/


.contenedor {
  background-color: gray;
  display: flex;
  flex-direction: column;
  height: 100vh;
}
.header, .main, .aside, .footer {
  padding: 20px;
}

.header {
  flex: 1 0 60px;
  background-color: lightblue;
}
.main {
  flex: 3 1 300px;
  background-color: slateblue;
}
.aside {
  flex: 1 3 200px;
  background-color: darkslateblue;
}
.footer {
  flex: 1 0 60px;
  background-color: violet;
}


@media screen and (min-width: 700px) {
  .contenedor {
    display: grid;
    grid-template-rows: 60px 1fr 60px;
    grid-template-columns: repeat(3, 1fr);
  }
  .header {
    grid-row: 1 / 2;
    grid-column: 1 / span 3;
  }
  .main {
    grid-row: 2 / 3;
    grid-column: 1 / span 2;
  }
  .aside {
    grid-row: 2 / 3;
    grid-column: 3 / span 1;
  }
  .footer {
    grid-row: 3 / 4;
    grid-column: 1 / span 3;
  }
}