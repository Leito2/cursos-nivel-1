.contenedor {
  width: 90vw;
  height: 90vh;
  padding: 30px;
  background: #aaa;
  margin: 30px;
  position: relative;
}

.caja {
  background-color: inherit; /*hereda el color del padre, por lo que sera gris clarito osea #aaa (diferente a transparent) */
  border: thick outset gray;
  height: 80px;
  width: 80px;
  margin: 10px;


  transition-property: left, background-color; /*que parte realiza un cambio*/
  /*aca selecciono all o puedo de una en una las propiedades que cambian en el hover*/
  transition-duration: 1s, 0.5s; /*lo que tarda en hacerse la ejecución*/
  transition-delay: 0.5s, 0s; /*tarda en comenzar a ejecutar*/
  /*podria haber colocado el left: 0 aca y el left: 80% en .contenedor:hover > .caja*/

  /*hize que en 0.5 cambie el background y luego en 1 segundo la animación de desplazamiento*/

  /*transition: property, duration y delay puede ser util condensarlas así:*/
  transition: left 1s 0.5s, background-color 0.5s 0s;/*la segunda puede quedar background 0.5s*/
  /*tambien:*/
  /*transition: property duration timing-function*/
  /*transition: property duration timing-function delay*/
  /*si no queremos delay solo dejamos 2 parametros*/
}
.uno {
  transition-timing-function: linear; /*transición constante*/
  position: relative;
  left: 0;
}
.dos {
  transition-timing-function: ease; /*por defecto (exponencial)*/
  position: relative;
  left: 0;
}
.tres {
  transition-timing-function: ease-in; /*termina rapido pero comienza lento*/
  position: relative;/*la posiciono para moverla*/
  left: 0; /*por defecto la dejo movida*/
}
.cuatro {
  transition-timing-function: ease-out;/*comienza rapido pero no más que easie y termina lento*/
  position: relative;
  left: 0;
}
.cinco {
  transition-timing-function: steps(5);
  transition-timing-function: cubic-bezier(0.075, 0.95, 0.150, 1);/*función especial que se puede editar en el browser*/
  /*                                       x1     y1     x2    y2     (luego se explica mejor)*/
  transition-timing-function: ease-in-out;/*comienza y termina lento pero en la mitad es rapido (más recomentable por un principio de animación)*/
  position: relative;
  left: 0;
}


.contenedor:hover > .uno {
  background-color: #8f8;
  left: 80%; /*mover las cajas*/
}
.contenedor:hover > .dos {
  background-color: #f88;
  left: 80%;
}
.contenedor:hover > .tres {
  background-color: #88f;
  left: 80%;
}
.contenedor:hover > .cuatro {
  background-color: #ff8;
  left: 80%;
}
.contenedor:hover > .cinco {
  background-color: #8ff;
  left: 80%;
}

/*para no heredar se puede colocar otro valor o colocar el valor initial el cual hereda solo de User Agent (valores por defecto)*/

/*mientras que display: none ('borra un elemento')*/
/*algo que también lo oculta pero conserva su espacio es visibility: hidden;*/

/*no usar all NUNCA porque causa efectos no deseables(causa transición en otras propiedades que no estan especificamente en hover o active o algo así) y no modulariza*/

/*tambien hay errores que animan cosas al inicio lo cual es por especificida y tener distintas propiedades redefinidas*/

/*existen propiedades no animables como border*/